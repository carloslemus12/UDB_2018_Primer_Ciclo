/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aplicacion.submenu;

import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import mojica.alexander.consulta.Conexion;
import mojica.alexander.consulta.Query;
import mojica.alexander.utilidades.*;

/**
 *
 * @author MekakuZero
 */
public class ModificarAlumno extends javax.swing.JInternalFrame {

    private int indiceEliminar = -1;
    private int filaEliminar = -1;
    private ListaAlumnos la;
    private Tabla materias;
    
    private int codigo;
    private String nombres;
    private String apellidos;
    
    /**
     * Creates new form NuevaMateria
     */
    public ModificarAlumno(Map<String, Object> fila, ListaAlumnos la) {
        initComponents();
        this.tblMateriasCursadas.getColumnModel().getColumn(0).setMinWidth(0);
        this.tblMateriasCursadas.getColumnModel().getColumn(0).setMaxWidth(0);
        
        // Establecemos la informacion inicial
        this.codigo = Integer.valueOf(fila.get("Codigo").toString());
        this.nombres = fila.get("Nombre").toString();
        this.apellidos = fila.get("Apellido").toString();
        
        this.la = la;
        
        Limipiar();
    }
    
    public void Limipiar(){
        this.txtId.setText(""+this.codigo);
        this.txtNombre.setText(this.nombres);
        this.txtApellido.setText(this.apellidos);
        this.btnEliminar.setEnabled(false);
        
        // Eliminamos todos los ITEMS
        DefaultTableModel model = (DefaultTableModel)this.tblMateriasCursadas.getModel();
        int size = model.getRowCount();
        for (int i = 0; i < size; i++)
            model.removeRow(0);
        // /////////////////////////////////
        
        Conexion con;
        
        if ((con = Conexion.establecerConexion()) != null) {
            ResultSet select = con.crearQuery("alumno_materia").where("Cod_alumno", this.codigo).select();
            
            List<Integer> indices = new ArrayList<>();
            
            try{
                while(select.next()){
                    int ind = select.getInt("Cod_materia");
                    
                    ResultSet materia = con.crearQuery("materia").where("Cod_materia", ind).select();
                    
                    if (materia.next()){
                        model.addRow(new Object[]{ ind, materia.getString("Nombre") });
                        indices.add(ind);
                    }
                }
                
                Query seleccion = con.crearQuery("materia");
                
                if(indices.size() > 0) seleccion.whereNotIn("Cod_materia", indices);
                
                ResultSet materiaSinCursar = seleccion.select();
                
                this.cmbMateriasACursar.removeAllItems();
                
                while(materiaSinCursar.next())
                    this.cmbMateriasACursar.addItem(materiaSinCursar.getString("Nombre"));
                
                materiaSinCursar.beforeFirst();
                this.materias = new Tabla(materiaSinCursar);
                
            } catch(Exception ex){}
        
            con.cerrarConexion();
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        btnModificar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        lblApellido = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        cmbMateriasACursar = new javax.swing.JComboBox<>();
        btnCursarMateria = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblMateriasCursadas = new javax.swing.JTable();
        lblIngresoMateria = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        btnEliminarAlumno = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setClosable(true);
        setIconifiable(true);
        setTitle("Modificar alumno");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        lblId.setText("Codigo alumno:");

        txtId.setEnabled(false);
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdKeyTyped(evt);
            }
        });

        lblNombre.setText("Nombre del alumno:");

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Textbox_KeyTyped(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        lblApellido.setText("Apellido del alumno:");

        txtApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoTextbox_KeyTyped(evt);
            }
        });

        cmbMateriasACursar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnCursarMateria.setText("Cursar");
        btnCursarMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCursarMateriaActionPerformed(evt);
            }
        });

        tblMateriasCursadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Materia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMateriasCursadas.setColumnSelectionAllowed(true);
        tblMateriasCursadas.getTableHeader().setReorderingAllowed(false);
        tblMateriasCursadas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMateriasCursadasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblMateriasCursadas);
        tblMateriasCursadas.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tblMateriasCursadas.getColumnModel().getColumnCount() > 0) {
            tblMateriasCursadas.getColumnModel().getColumn(0).setResizable(false);
            tblMateriasCursadas.getColumnModel().getColumn(1).setResizable(false);
        }

        lblIngresoMateria.setText("Materias a ingresar:");

        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEliminarAlumno.setText("Eliminar");
        btnEliminarAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAlumnoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblId)
                            .addComponent(lblNombre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(16, 16, 16)
                            .addComponent(lblIngresoMateria)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addComponent(cmbMateriasACursar, 0, 213, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnCursarMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(btnModificar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnEliminarAlumno)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnLimpiar)))
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblApellido)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApellido)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMateriasACursar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIngresoMateria)
                    .addComponent(btnCursarMateria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar))
                .addGap(18, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificar)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminarAlumno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        this.Limipiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void txtIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar()))
            evt.consume();
    }//GEN-LAST:event_txtIdKeyTyped

    private void Textbox_KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Textbox_KeyTyped
        // TODO add your handling code here:
        if (!Character.isLetterOrDigit(evt.getKeyChar()) && evt.getKeyChar()!= ' ')
            evt.consume();
    }//GEN-LAST:event_Textbox_KeyTyped

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if (Validacion.ComprobarDatosTextBox(new javax.swing.JTextField[]{ this.txtId, this.txtNombre, this.txtApellido})) {
            Conexion conexion;
            
            // Mientras no se haya oriducido ningun error
            if ((conexion = Conexion.establecerConexion()) != null) {
                
                String nombre = this.txtNombre.getText().trim();
                String apellido = this.txtApellido.getText().trim();
                
                
                try{
                    
                    int num = conexion.crearQuery("alumno").agregarCampoValor("Nombres", nombre).agregarCampoValor("Apellidos", apellido).where("Cod_alumno", this.codigo).update();
                    
                    if (num > 0) {
                        
                        this.nombres = nombre;
                        this.apellidos = apellido;
                        
                        Mensaje.Informacion("El usuario ha sido ingresado", title);
                        this.Limipiar();
                        
                    } else
                        Mensaje.Error("No se ha podido modificar el alumno", title);
                    
                } catch(Exception ex){}
                
                conexion.cerrarConexion();
            } else
                Mensaje.Error("No se ha podido establecer la conexion", this.getTitle());
        } else
            Mensaje.Error("Todos los campos son obligatorios", this.getTitle());
    }//GEN-LAST:event_btnModificarActionPerformed

    private void txtApellidoTextbox_KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoTextbox_KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoTextbox_KeyTyped

    private void btnCursarMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCursarMateriaActionPerformed
        // TODO add your handling code here:
        if (this.cmbMateriasACursar.getItemCount() > 0) {
            int indice = this.cmbMateriasACursar.getSelectedIndex();
        
            String ind = this.materias.getField(indice, "Cod_materia");

            Conexion con;
            
            if ((con = Conexion.establecerConexion()) != null) {
                int num = con.crearQuery("alumno_materia")
                        .agregarCampoValor("Cod_alumno", this.codigo)
                        .agregarCampoValor("Cod_materia", Integer.valueOf(ind))
                        .insert();
                
                con.cerrarConexion();
                
                if (num > 0) {
                    Mensaje.Informacion("Se ha guardado la materia", title);
                    this.Limipiar();
                } else
                    Mensaje.Error("No se ha podido cursar la materia", title);
                
            } else
                Mensaje.Error("No se ha podido establecer la conexion", title);
        } else {
            Mensaje.Error("No hay materias para ser registradas", title);
        }
        
        la.obtenerAlumnos();
    }//GEN-LAST:event_btnCursarMateriaActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modal = (DefaultTableModel)this.tblMateriasCursadas.getModel();
        
        int ind = Integer.valueOf(modal.getValueAt(this.filaEliminar, 0).toString());
        
        Conexion con;
            
        if ((con = Conexion.establecerConexion()) != null) {
            int num = con.crearQuery("alumno_materia")
                    .where("Cod_materia", ind)
                    .where("Cod_alumno", this.codigo)
                    .delete();

            con.cerrarConexion();

            if (num > 0) {
                Mensaje.Informacion("Se ha eliminado la materia", title);
                this.Limipiar();
            } else
                Mensaje.Error("No se ha podido eliminar la materia", title);

        } else
            Mensaje.Error("No se ha podido establecer la conexion", title);
        
        this.btnEliminar.setEnabled(false);
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formMouseClicked

    private void tblMateriasCursadasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMateriasCursadasMouseClicked
        // TODO add your handling code here:
        DefaultTableModel modal = (DefaultTableModel)this.tblMateriasCursadas.getModel();
        this.filaEliminar = this.jTable1.rowAtPoint(evt.getPoint());
        String ind = modal.getValueAt(this.filaEliminar, 0).toString();
        this.indiceEliminar = Integer.valueOf(ind);
        this.btnEliminar.setEnabled(true);
    }//GEN-LAST:event_tblMateriasCursadasMouseClicked

    private void btnEliminarAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAlumnoActionPerformed
        // TODO add your handling code here:
        Conexion con;
            
        if ((con = Conexion.establecerConexion()) != null) {
            int num = con.crearQuery("alumno").where("Cod_alumno", this.codigo).delete();
                
            if (num > 0) {
                this.dispose();
                Mensaje.Informacion("El alumno ha sido eliminado", title);
            } else
                Mensaje.Error("No se ha podido eliminar el alumno", title);
            
            con.cerrarConexion();
        } else
            Mensaje.Error("No se ha podido establecer la conexion", title);
        
        la.obtenerAlumnos();
    }//GEN-LAST:event_btnEliminarAlumnoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCursarMateria;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarAlumno;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> cmbMateriasACursar;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblApellido;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblIngresoMateria;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JTable tblMateriasCursadas;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
